{
  "contractName": "NaraMalsamiToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x10154bad"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x291d9549"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2e0f2625"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2ff2e9dc"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3af32abf"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4c5a628c"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x7362d9c8"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xbb5f747b"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd6cd9473"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xddca3f43"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "server",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xfd922a42"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tradeAddress",
          "type": "address"
        }
      ],
      "name": "tradeMade",
      "type": "event",
      "signature": "0x8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event",
      "signature": "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event",
      "signature": "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event",
      "signature": "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event",
      "signature": "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_server",
          "type": "address"
        }
      ],
      "name": "setServer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf19a0b54"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getServer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x089587cd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDecimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function",
      "signature": "0xf0141d84"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "dataNum",
          "type": "uint256"
        },
        {
          "name": "verifierNum",
          "type": "uint256"
        }
      ],
      "name": "newTrade",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf9fecc9a"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106200019f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314620001a4578063089587cd146200023a578063095ea7b3146200029457806310154bad146200030b57806318160ddd146200036057806323b872dd146200038e578063291d954914620004255780632e0f2625146200047a5780632ff2e9dc14620004ae578063313ce56714620004dc5780633950935114620005105780633af32abf14620005875780634c5a628c14620005f457806370a08231146200060e578063715018a614620006775780637362d9c814620006915780638da5cb5b14620006e65780638f32d59b146200074057806395d89b411462000772578063a457c2d71462000808578063a9059cbb146200087f578063bb5f747b14620008f6578063d6cd94731462000963578063dd62ed3e146200097d578063ddca3f431462000a06578063f0141d841462000a3c578063f19a0b541462000a70578063f2fde38b1462000ac5578063f9fecc9a1462000b1a578063fd922a421462000b85575b600080fd5b348015620001b157600080fd5b50620001bc62000bdf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620001fe578082015181840152602081019050620001e1565b50505050905090810190601f1680156200022c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200024757600080fd5b506200025262000c85565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620002a157600080fd5b50620002f160048036036040811015620002ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000caf565b604051808215151515815260200191505060405180910390f35b3480156200031857600080fd5b506200035e600480360360208110156200033157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000ddd565b005b3480156200036d57600080fd5b506200037862000e02565b6040518082815260200191505060405180910390f35b3480156200039b57600080fd5b506200040b60048036036060811015620003b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000e0c565b604051808215151515815260200191505060405180910390f35b3480156200043257600080fd5b5062000478600480360360208110156200044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001018565b005b3480156200048757600080fd5b50620004926200103d565b604051808260ff1660ff16815260200191505060405180910390f35b348015620004bb57600080fd5b50620004c662001042565b6040518082815260200191505060405180910390f35b348015620004e957600080fd5b50620004f462001054565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200051d57600080fd5b506200056d600480360360408110156200053657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200106b565b604051808215151515815260200191505060405180910390f35b3480156200059457600080fd5b50620005da60048036036020811015620005ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012a5565b604051808215151515815260200191505060405180910390f35b3480156200060157600080fd5b506200060c620012c4565b005b3480156200061b57600080fd5b5062000661600480360360208110156200063457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620012d1565b6040518082815260200191505060405180910390f35b3480156200068457600080fd5b506200068f62001319565b005b3480156200069e57600080fd5b50620006e460048036036020811015620006b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620013f0565b005b348015620006f357600080fd5b50620006fe62001415565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200074d57600080fd5b50620007586200143f565b604051808215151515815260200191505060405180910390f35b3480156200077f57600080fd5b506200078a62001497565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015620007cc578082015181840152602081019050620007af565b50505050905090810190601f168015620007fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156200081557600080fd5b5062000865600480360360408110156200082e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506200153d565b604051808215151515815260200191505060405180910390f35b3480156200088c57600080fd5b50620008dc60048036036040811015620008a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001777565b604051808215151515815260200191505060405180910390f35b3480156200090357600080fd5b5062000949600480360360208110156200091c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001790565b604051808215151515815260200191505060405180910390f35b3480156200097057600080fd5b506200097b620017af565b005b3480156200098a57600080fd5b50620009f060048036036040811015620009a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620017bc565b6040518082815260200191505060405180910390f35b34801562000a1357600080fd5b5062000a1e62001843565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801562000a4957600080fd5b5062000a5462001849565b604051808260ff1660ff16815260200191505060405180910390f35b34801562000a7d57600080fd5b5062000ac36004803603602081101562000a9657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001852565b005b34801562000ad257600080fd5b5062000b186004803603602081101562000aeb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620018ad565b005b34801562000b2757600080fd5b5062000b6b6004803603606081101562000b4057600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050620018d1565b604051808215151515815260200191505060405180910390f35b34801562000b9257600080fd5b5062000b9d62001ab9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801562000c7b5780601f1062000c4f5761010080835404028352916020019162000c7b565b820191906000526020600020905b81548152906001019060200180831162000c5d57829003601f168201915b5050505050905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151562000ced57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b62000de83362001790565b151562000df457600080fd5b62000dff8162001adf565b50565b6000600254905090565b600062000e9f82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462001b3b90919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000f2c84848462001b5e565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b620010233362001790565b15156200102f57600080fd5b6200103a8162001d2f565b50565b601281565b601260ff16600a0a6402540be4000281565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515620010a957600080fd5b6200113a82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462001d8b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000620012bd82600762001dad90919063ffffffff16565b9050919050565b620012cf3362001e42565b565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b620013236200143f565b15156200132f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b620013fb3362001790565b15156200140757600080fd5b620014128162001e9e565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620015335780601f10620015075761010080835404028352916020019162001533565b820191906000526020600020905b8154815290600101906020018083116200151557829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156200157b57600080fd5b6200160c82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462001b3b90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60006200178633848462001b5e565b6001905092915050565b6000620017a882600662001dad90919063ffffffff16565b9050919050565b620017ba3362001d2f565b565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6103e881565b60006012905090565b6200185d33620012a5565b15156200186957600080fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620018b76200143f565b1515620018c357600080fd5b620018ce8162001efa565b50565b600083620018df33620012d1565b10151515620018ed57600080fd5b600062001920612710620019116103e861ffff168862001ff790919063ffffffff16565b6200203990919063ffffffff16565b905060008186039050600030338388886200193a620021cc565b808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200195505050505050604051809103906000f080158015620019d5573d6000803e3d6000fd5b50905062001a06600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168462001777565b5062001a13818362001777565b507f8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb3382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600193505050509392505050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b62001af58160076200206590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b600082821115151562001b4d57600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562001b9b57600080fd5b62001bee816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462001b3b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062001c83816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462001d8b90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b62001d458160076200211990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b600080828401905083811015151562001da357600080fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562001deb57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b62001e588160066200211990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b62001eb48160066200206590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151562001f3757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808314156200200c576000905062002033565b600082840290508284828115156200202057fe5b041415156200202e57600080fd5b809150505b92915050565b600080821115156200204a57600080fd5b600082848115156200205857fe5b0490508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620020a257600080fd5b620020ae828262001dad565b151515620020bb57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200215657600080fd5b62002162828262001dad565b15156200216e57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040516129aa80620021de8339019056fe6080604052612710600260146101000a81548161ffff021916908361ffff160217905550612710600260166101000a81548161ffff021916908361ffff160217905550612710600260186101000a81548161ffff021916908361ffff160217905550600a60045560006005556000600a556000600b556000600c556000600d60006101000a81548160ff021916908315150217905550348015620000a257600080fd5b5060405160a080620029aa833981018060405260a0811015620000c457600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a383600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000214846200045b640100000000026401000000009004565b84600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260038190555081600681905550806005819055506000600781905550600062000317620002c3600260169054906101000a900461ffff1661ffff16600260189054906101000a900461ffff1661ffff166200049d6401000000000262002115179091906401000000009004565b620002fa600260169054906101000a900461ffff1661ffff1687620004bf6401000000000262001671179091906401000000009004565b62000501640100000000026200214d179091906401000000009004565b905060006200033e82866200052d6401000000000262002177179091906401000000009004565b905062000363848362000501640100000000026200214d179091906401000000009004565b600881905550620003ae620003908486620004bf6401000000000262001671179091906401000000009004565b8262000501640100000000026200214d179091906401000000009004565b600981905550620003f0620003db8584620005506401000000000262002257179091906401000000009004565b62000577640100000000026401000000009004565b6200044e620004396200041b8587620004bf6401000000000262001671179091906401000000009004565b83620005506401000000000262002257179091906401000000009004565b62000577640100000000026401000000009004565b50505050505050620006f2565b62000474620005a0640100000000026401000000009004565b15156200048057600080fd5b6200049a81620005f7640100000000026401000000009004565b50565b6000808284019050838110151515620004b557600080fd5b8091505092915050565b600080831415620004d45760009050620004fb565b60008284029050828482811515620004e857fe5b04141515620004f657600080fd5b809150505b92915050565b600080821115156200051257600080fd5b600082848115156200052057fe5b0490508091505092915050565b60008282111515156200053f57600080fd5b600082840390508091505092915050565b60008082141515156200056257600080fd5b81838115156200056e57fe5b06905092915050565b6200059c81600c546200049d6401000000000262002115179091906401000000009004565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200063457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6122a880620007026000396000f3fe6080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316dd1f691461010b578063355274ea14610169578063505678ac14610194578063715018a6146101db57806389af8ae9146101f25780638da5cb5b146103055780638f32d59b1461035c5780639679dd7d1461038b57806396f80c5c146103b6578063ae55c8881461043c578063c139e64c146105be578063c257e8831461067c578063c650e738146106a7578063dc49be62146106d2578063f2fde38b146106fd578063f3e9371f1461074e578063f7407b4a14610779578063fc0c546a146107a4575b34801561010857600080fd5b50005b34801561011757600080fd5b506101206107fb565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561017557600080fd5b5061017e610831565b6040518082815260200191505060405180910390f35b3480156101a057600080fd5b506101a961083b565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156101e757600080fd5b506101f0610863565b005b3480156101fe57600080fd5b50610303600480360360a081101561021557600080fd5b810190808035906020019064010000000081111561023257600080fd5b82018360208201111561024457600080fd5b8035906020019184600183028401116401000000008311171561026657600080fd5b909192939192939080359060200190929190803561ffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102bf57600080fd5b8201836020820111156102d157600080fd5b803590602001918460018302840111640100000000831117156102f357600080fd5b9091929391929390505050610935565b005b34801561031157600080fd5b5061031a610bc1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036857600080fd5b50610371610bea565b604051808215151515815260200191505060405180910390f35b34801561039757600080fd5b506103a0610c41565b6040518082815260200191505060405180910390f35b3480156103c257600080fd5b5061043a600480360360208110156103d957600080fd5b81019080803590602001906401000000008111156103f657600080fd5b82018360208201111561040857600080fd5b8035906020019184600183028401116401000000008311171561042a57600080fd5b9091929391929390505050610d42565b005b34801561044857600080fd5b506105026004803603602081101561045f57600080fd5b810190808035906020019064010000000081111561047c57600080fd5b82018360208201111561048e57600080fd5b803590602001918460018302840111640100000000831117156104b057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611074565b60405180806020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825286818151815260200191508051906020019080838360005b83811015610580578082015181840152602081019050610565565b50505050905090810190601f1680156105ad5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156105ca57600080fd5b5061067a600480360360808110156105e157600080fd5b81019080803590602001906401000000008111156105fe57600080fd5b82018360208201111561061057600080fd5b8035906020019184600183028401116401000000008311171561063257600080fd5b909192939192939080359060200190929190803561ffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113ba565b005b34801561068857600080fd5b50610691611587565b6040518082815260200191505060405180910390f35b3480156106b357600080fd5b506106bc611591565b6040518082815260200191505060405180910390f35b3480156106de57600080fd5b506106e761160a565b6040518082815260200191505060405180910390f35b34801561070957600080fd5b5061074c6004803603602081101561072057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611614565b005b34801561075a57600080fd5b50610763611633565b6040518082815260200191505060405180910390f35b34801561078557600080fd5b5061078e61163d565b6040518082815260200191505060405180910390f35b3480156107b057600080fd5b506107b9611647565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610829610c41565b915091509091565b6000600354905090565b6000806000806000600354600854600654600754600c54945094509450945094509091929394565b61086b610bea565b151561087657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61093d611647565b73ffffffffffffffffffffffffffffffffffffffff16633af32abf336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d60208110156109ff57600080fd5b81019080805190602001909291905050501515610a1b57600080fd5b6000610a328660085461167190919063ffffffff16565b9050610a8383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087876116af565b610ad288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050858361172a565b610b6788888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505087878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506117a5565b610bb788888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050868684611a7c565b5050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600c54600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d0157600080fd5b505afa158015610d15573d6000803e3d6000fd5b505050506040513d6020811015610d2b57600080fd5b810190808051906020019092919050505003905090565b610d4a611647565b73ffffffffffffffffffffffffffffffffffffffff16633af32abf336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610de257600080fd5b505afa158015610df6573d6000803e3d6000fd5b505050506040513d6020811015610e0c57600080fd5b81019080805190602001909291905050501515610e2857600080fd5b610eeb82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600e8484604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e8585604051808383808284378083019250505092505050908152602001604051809103902060010154611bff565b610fae82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050600e8484604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600e8585604051808383808284378083019250505092505050908152602001604051809103902060010154611dcd565b600e8282604051808383808284378083019250505092505050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f24a756d1a2c8f2c24ad07b6b6c6a46090bce16d2523224ca3aae963753b3622c600e84846040518083838082843780830192505050925050509081526020016040518091039020600101546040518082815260200191505060405180910390a25050565b60606000806000611083610bea565b151561108e57600080fd5b6000600f866040518082805190602001908083835b6020831015156110c857805182526020820191506020810190506020830392506110a3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000180546001816001161561010002031660029004905011151561111f57600080fd5b600f856040518082805190602001908083835b6020831015156111575780518252602082019150602081019050602083039250611132565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600001600f866040518082805190602001908083835b6020831015156111c557805182526020820191506020810190506020830392506111a0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010154600f876040518082805190602001908083835b602083101515611234578051825260208201915060208101905060208303925061120f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160149054906101000a900461ffff16600f886040518082805190602001908083835b6020831015156112b1578051825260208201915060208101905060208303925061128c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561139d5780601f106113725761010080835404028352916020019161139d565b820191906000526020600020905b81548152906001019060200180831161138057829003601f168201915b505050505093508161ffff16915093509350935093509193509193565b6113c2611647565b73ffffffffffffffffffffffffffffffffffffffff16633af32abf336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561145a57600080fd5b505afa15801561146e573d6000803e3d6000fd5b505050506040513d602081101561148457600080fd5b810190808051906020019092919050505015156114a057600080fd5b60006114b78460095461167190919063ffffffff16565b9050600260149054906101000a900461ffff1661ffff168361ffff16111515156114e057600080fd5b61152f86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050838361172a565b61157f86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050848484611a7c565b505050505050565b6000600854905090565b600061159b610bea565b15156115a657600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561160257600080fd5b600c54905090565b6000600654905090565b61161c610bea565b151561162757600080fd5b6116308161201b565b50565b6000600a54905090565b6000600754905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008083141561168457600090506116a9565b6000828402905082848281151561169757fe5b041415156116a457600080fd5b809150505b92915050565b600260149054906101000a900461ffff1661ffff168161ffff16111515156116d657600080fd5b600083511115156116e657600080fd5b600082141515156116f657600080fd5b6116fe61160a565b6117188361170a61163d565b61211590919063ffffffff16565b1115151561172557600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561176657600080fd5b6000835111151561177657600080fd5b8061177f610c41565b1015151561178c57600080fd5b611794612136565b1515156117a057600080fd5b505050565b83600f866040518082805190602001908083835b6020831015156117de57805182526020820191506020810190506020830392506117b9565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001018190555082600f866040518082805190602001908083835b602083101515611851578051825260208201915060208101905060208303925061182c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160146101000a81548161ffff021916908361ffff16021790555081600f866040518082805190602001908083835b6020831015156118da57805182526020820191506020810190506020830392506118b5565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f866040518082805190602001908083835b6020831015156119875780518252602082019150602081019050602083039250611962565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000190805190602001906119d09291906121b2565b506119e68460075461211590919063ffffffff16565b6007819055507ff3ed3d6eeb73afbb562f79fcf662eaaa3e17ee90a0be461d0970ea4e9b4ac87884611a1661163d565b611a1e61160a565b85604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a15050505050565b6000611abb600260149054906101000a900461ffff1661ffff16611aad8661ffff168561167190919063ffffffff16565b61214d90919063ffffffff16565b905082600e866040518082805190602001908083835b602083101515611af65780518252602082019150602081019050602083039250611ad1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600e866040518082805190602001908083835b602083101515611ba35780518252602082019150602081019050602083039250611b7e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010181905550611bf8611bf3828461217790919063ffffffff16565b612199565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c3b57600080fd5b60008114151515611c4b57600080fd5b60008351111515611c5b57600080fd5b600115156010846040518082805190602001908083835b602083101515611c975780518252602082019150602081019050602083039250611c72565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160009054906101000a900460ff16151514151515611cea57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16600e846040518082805190602001908083835b602083101515611d395780518252602082019150602081019050602083039250611d14565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611db257600080fd5b80611dbb610c41565b10151515611dc857600080fd5b505050565b806010846040518082805190602001908083835b602083101515611e065780518252602082019150602081019050602083039250611de1565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000018190555060016010846040518082805190602001908083835b602083101515611e7a5780518252602082019150602081019050602083039250611e55565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060010160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611f8c57600080fd5b505af1158015611fa0573d6000803e3d6000fd5b505050506040513d6020811015611fb657600080fd5b8101908080519060200190929190505050508173ffffffffffffffffffffffffffffffffffffffff167f24a756d1a2c8f2c24ad07b6b6c6a46090bce16d2523224ca3aae963753b3622c826040518082815260200191505060405180910390a2505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561205757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015151561212c57600080fd5b8091505092915050565b6000600d60009054906101000a900460ff16905090565b6000808211151561215d57600080fd5b6000828481151561216a57fe5b0490508091505092915050565b600082821115151561218857600080fd5b600082840390508091505092915050565b6121ae81600c5461211590919063ffffffff16565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106121f357805160ff1916838001178555612221565b82800160010185558215612221579182015b82811115612220578251825591602001919060010190612205565b5b50905061222e9190612232565b5090565b61225491905b80821115612250576000816000905550600101612238565b5090565b90565b600080821415151561226857600080fd5b818381151561227357fe5b0690509291505056fea165627a7a723058207c080886f86e10aaad02a427a461b16ee4f0ff049ca2467708366bbbf074bd600029a165627a7a72305820a5f2284a06243fb155d2a720cbf8fa25784f3c9f4b7b166c977f07b2ce1d71a80029",
  "sourceMap": "342:1289:1:-;;;693:162;8:9:-1;5:2;;;30:1;27;20:12;5:2;693:162:1;420:167:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:2:1;517:4:10;509:5;:12;;;;;;;;;;;;:::i;:::-;;542:6;532:7;:16;;;;;;;;;;;;:::i;:::-;;571:8;559:9;;:20;;;;;;;;;;;;;;;;;;420:167;;;450:30:5;469:10;450:18;;;:30;;;:::i;:::-;541:10:8;532:6;;:19;;;;;;;;;;;;;;;;;;600:6;;;;;;;;;;;567:40;;596:1;567:40;;;;;;;;;;;;779:33:1;785:10;456:2;526:17;;520:2;:23;505:11;:39;779:5;;;:33;;;:::i;:::-;822:26;837:10;822:14;;;:26;;;:::i;:::-;342:1289;;960:146:5;1025:29;1046:7;1025:16;:20;;;;;;:29;;;;;:::i;:::-;1090:7;1070:28;;;;;;;;;;;;960:146;:::o;6349:269:9:-;6443:1;6424:21;;:7;:21;;;;6416:30;;;;;;;;6474:23;6491:5;6474:12;;:16;;;;;;:23;;;;;:::i;:::-;6459:12;:38;;;;6529:29;6552:5;6529:9;:18;6539:7;6529:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;6508:9;:18;6518:7;6508:18;;;;;;;;;;;;;;;:50;;;;6595:7;6574:36;;6591:1;6574:36;;;6604:5;6574:36;;;;;;;;;;;;;;;;;;6349:269;;:::o;876:110:6:-;545:28:5;562:10;545:16;;;:28;;;:::i;:::-;537:37;;;;;;;;954:24:6;970:7;954:15;;;:24;;;:::i;:::-;876:110;:::o;273:186:4:-;369:1;350:21;;:7;:21;;;;342:30;;;;;;;;392:18;396:4;402:7;392:3;;;:18;;;:::i;:::-;391:19;383:28;;;;;;;;447:4;424;:11;;:20;436:7;424:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;273:186;;:::o;1480:150:7:-;1538:7;1558:9;1574:1;1570;:5;1558:17;;1599:1;1594;:6;;1586:15;;;;;;;;1621:1;1614:8;;;1480:150;;;;:::o;602:125:5:-;666:4;690:29;711:7;690:16;:20;;;;;;:29;;;;;:::i;:::-;683:36;;602:125;;;:::o;1213:137:6:-;1275:26;1293:7;1275:13;:17;;;;;;:26;;;;;:::i;:::-;1334:7;1317:25;;;;;;;;;;;;1213:137;:::o;821:165:4:-;893:4;937:1;918:21;;:7;:21;;;;910:30;;;;;;;;958:4;:11;;:20;970:7;958:20;;;;;;;;;;;;;;;;;;;;;;;;;951:27;;821:165;;;;:::o;342:1289:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "342:1289:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:83:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;652:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:65:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2806:244:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2806:244:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2806:244:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:110:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:110:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;876:110:6;;;;;;;;;;;;;;;;;;;;;;965:91:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;965:91:9;;;;;;;;;;;;;;;;;;;;;;;3523:299;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3523:299:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3523:299:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:116:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:116:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;994:116:6;;;;;;;;;;;;;;;;;;;;;;423:35:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;423:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;464:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:80:1;;;;;;;;;;;;;;;;;;;;;;;968:83:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;4337:323:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4337:323:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4337:323:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:119:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;749:119:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;749:119:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:93:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;859:93:5;;;;;;1272:106:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1272:106:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1272:106:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:140:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1396:140:8;;;;;;735:116:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;735:116:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;735:116:5;;;;;;;;;;;;;;;;;;;;;;683:79:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:92:8;;;;;;;;;;;;;;;;;;;;;;;;;;;802:87:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:87:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;802:87:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5180:333:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5180:333:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5180:333:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2019:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2019:140:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2019:140:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:125:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:125:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;602:125:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1118:87:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1118:87:6;;;;;;1717:131:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:131:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1717:131:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:33:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;550:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;861:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:92:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;861:92:1;;;;;;;;;;;;;;;;;;;;;;1713:109:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:109:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:109:8;;;;;;;;;;;;;;;;;;;;;;1118:509:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1118:509:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1118:509:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;652:83:10;689:13;722:5;715:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:83;:::o;959:65:1:-;1000:7;1016:6;;;;;;;;;;;1009:13;;959:65;:::o;2806:244:9:-;2871:4;2915:1;2896:21;;:7;:21;;;;2888:30;;;;;;;;2963:5;2931:8;:20;2940:10;2931:20;;;;;;;;;;;;;;;:29;2952:7;2931:29;;;;;;;;;;;;;;;:37;;;;3005:7;2984:36;;2993:10;2984:36;;;3014:5;2984:36;;;;;;;;;;;;;;;;;;3038:4;3031:11;;2806:244;;;;:::o;876:110:6:-;545:28:5;562:10;545:16;:28::i;:::-;537:37;;;;;;;;954:24:6;970:7;954:15;:24::i;:::-;876:110;:::o;965:91:9:-;1009:7;1036:12;;1029:19;;965:91;:::o;3523:299::-;3602:4;3648:37;3679:5;3648:8;:14;3657:4;3648:14;;;;;;;;;;;;;;;:26;3663:10;3648:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3619:8;:14;3628:4;3619:14;;;;;;;;;;;;;;;:26;3634:10;3619:26;;;;;;;;;;;;;;;:66;;;;3696:26;3706:4;3712:2;3716:5;3696:9;:26::i;:::-;3753:10;3738:54;;3747:4;3738:54;;;3765:8;:14;3774:4;3765:14;;;;;;;;;;;;;;;:26;3780:10;3765:26;;;;;;;;;;;;;;;;3738:54;;;;;;;;;;;;;;;;;;3810:4;3803:11;;3523:299;;;;;:::o;994:116:6:-;545:28:5;562:10;545:16;:28::i;:::-;537:37;;;;;;;;1075:27:6;1094:7;1075:18;:27::i;:::-;994:116;:::o;423:35:1:-;456:2;423:35;:::o;464:80::-;456:2;526:17;;520:2;:23;505:11;:39;464:80;:::o;968:83:10:-;1009:5;1034:9;;;;;;;;;;;1027:16;;968:83;:::o;4337:323:9:-;4417:4;4461:1;4442:21;;:7;:21;;;;4434:30;;;;;;;;4509:45;4543:10;4509:8;:20;4518:10;4509:20;;;;;;;;;;;;;;;:29;4530:7;4509:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4477:8;:20;4486:10;4477:20;;;;;;;;;;;;;;;:29;4498:7;4477:29;;;;;;;;;;;;;;;:77;;;;4591:7;4570:60;;4579:10;4570:60;;;4600:8;:20;4609:10;4600:20;;;;;;;;;;;;;;;:29;4621:7;4600:29;;;;;;;;;;;;;;;;4570:60;;;;;;;;;;;;;;;;;;4648:4;4641:11;;4337:323;;;;:::o;749:119:6:-;810:4;834:26;852:7;834:13;:17;;:26;;;;:::i;:::-;827:33;;749:119;;;:::o;859:93:5:-;911:33;933:10;911:21;:33::i;:::-;859:93::o;1272:106:9:-;1327:7;1354:9;:16;1364:5;1354:16;;;;;;;;;;;;;;;;1347:23;;1272:106;;;:::o;1396:140:8:-;895:9;:7;:9::i;:::-;887:18;;;;;;;;1495:1;1458:40;;1479:6;;;;;;;;;;;1458:40;;;;;;;;;;;;1526:1;1509:6;;:19;;;;;;;;;;;;;;;;;;1396:140::o;735:116:5:-;545:28;562:10;545:16;:28::i;:::-;537:37;;;;;;;;816:27;835:7;816:18;:27::i;:::-;735:116;:::o;683:79:8:-;721:7;748:6;;;;;;;;;;;741:13;;683:79;:::o;1018:92::-;1058:4;1096:6;;;;;;;;;;;1082:20;;:10;:20;;;1075:27;;1018:92;:::o;802:87:10:-;841:13;874:7;867:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:87;:::o;5180:333:9:-;5265:4;5309:1;5290:21;;:7;:21;;;;5282:30;;;;;;;;5357:50;5391:15;5357:8;:20;5366:10;5357:20;;;;;;;;;;;;;;;:29;5378:7;5357:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5325:8;:20;5334:10;5325:20;;;;;;;;;;;;;;;:29;5346:7;5325:29;;;;;;;;;;;;;;;:82;;;;5444:7;5423:60;;5432:10;5423:60;;;5453:8;:20;5462:10;5453:20;;;;;;;;;;;;;;;:29;5474:7;5453:29;;;;;;;;;;;;;;;;5423:60;;;;;;;;;;;;;;;;;;5501:4;5494:11;;5180:333;;;;:::o;2019:140::-;2080:4;2097:32;2107:10;2119:2;2123:5;2097:9;:32::i;:::-;2147:4;2140:11;;2019:140;;;;:::o;602:125:5:-;666:4;690:29;711:7;690:16;:20;;:29;;;;:::i;:::-;683:36;;602:125;;;:::o;1118:87:6:-;1167:30;1186:10;1167:18;:30::i;:::-;1118:87::o;1717:131:9:-;1789:7;1816:8;:15;1825:5;1816:15;;;;;;;;;;;;;;;:24;1832:7;1816:24;;;;;;;;;;;;;;;;1809:31;;1717:131;;;;:::o;550:33:1:-;579:4;550:33;:::o;1030:82::-;1074:5;456:2;1090:15;;1030:82;:::o;861:92::-;695:25:6;709:10;695:13;:25::i;:::-;687:34;;;;;;;;939:7:1;930:6;;:16;;;;;;;;;;;;;;;;;;861:92;:::o;1713:109:8:-;895:9;:7;:9::i;:::-;887:18;;;;;;;;1786:28;1805:8;1786:18;:28::i;:::-;1713:109;:::o;1118:509:1:-;1202:4;1250:3;1225:21;1235:10;1225:9;:21::i;:::-;:28;;1217:37;;;;;;;;1264:16;1283:23;1300:5;1283:12;579:4;1283:12;;:3;:7;;:12;;;;:::i;:::-;:16;;:23;;;;:::i;:::-;1264:42;;1316:17;1342:8;1336:3;:14;1316:34;;1361:26;1416:4;1422:10;1434:9;1445:7;1454:11;1390:76;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1390:76:1;1361:105;;1476:26;1485:6;;;;;;;;;;;1493:8;1476;:26::i;:::-;;1512:34;1529:4;1536:9;1512:8;:34::i;:::-;;1563:36;1573:10;1593:4;1563:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:4;1609:11;;;;;1118:509;;;;;:::o;606:21::-;;;;;;;;;;;;;:::o;1213:137:6:-;1275:26;1293:7;1275:13;:17;;:26;;;;:::i;:::-;1334:7;1317:25;;;;;;;;;;;;1213:137;:::o;1244:150:7:-;1302:7;1335:1;1330;:6;;1322:15;;;;;;;;1348:9;1364:1;1360;:5;1348:17;;1385:1;1378:8;;;1244:150;;;;:::o;5735:262:9:-;5837:1;5823:16;;:2;:16;;;;5815:25;;;;;;;;5871:26;5891:5;5871:9;:15;5881:4;5871:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5853:9;:15;5863:4;5853:15;;;;;;;;;;;;;;;:44;;;;5924:24;5942:5;5924:9;:13;5934:2;5924:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5908:9;:13;5918:2;5908:13;;;;;;;;;;;;;;;:40;;;;5979:2;5964:25;;5973:4;5964:25;;;5983:5;5964:25;;;;;;;;;;;;;;;;;;5735:262;;;:::o;1358:145:6:-;1423:29;1444:7;1423:13;:20;;:29;;;;:::i;:::-;1487:7;1468:27;;;;;;;;;;;;1358:145;:::o;1480:150:7:-;1538:7;1558:9;1574:1;1570;:5;1558:17;;1599:1;1594;:6;;1586:15;;;;;;;;1621:1;1614:8;;;1480:150;;;;:::o;821:165:4:-;893:4;937:1;918:21;;:7;:21;;;;910:30;;;;;;;;958:4;:11;;:20;970:7;958:20;;;;;;;;;;;;;;;;;;;;;;;;;951:27;;821:165;;;;:::o;1114:154:5:-;1182:32;1206:7;1182:16;:23;;:32;;;;:::i;:::-;1252:7;1230:30;;;;;;;;;;;;1114:154;:::o;960:146::-;1025:29;1046:7;1025:16;:20;;:29;;;;:::i;:::-;1090:7;1070:28;;;;;;;;;;;;960:146;:::o;1972:187:8:-;2066:1;2046:22;;:8;:22;;;;2038:31;;;;;;;;2114:8;2085:38;;2106:6;;;;;;;;;;;2085:38;;;;;;;;;;;;2143:8;2134:6;;:17;;;;;;;;;;;;;;;;;;1972:187;:::o;239:433:7:-;297:7;546:1;541;:6;537:47;;;571:1;564:8;;;;537:47;596:9;612:1;608;:5;596:17;;641:1;636;632;:5;;;;;;;;:10;624:19;;;;;;;;663:1;656:8;;;239:433;;;;;:::o;805:303::-;863:7;962:1;958;:5;950:14;;;;;;;;975:9;991:1;987;:5;;;;;;;;975:17;;1099:1;1092:8;;;805:303;;;;:::o;273:186:4:-;369:1;350:21;;:7;:21;;;;342:30;;;;;;;;392:18;396:4;402:7;392:3;:18::i;:::-;391:19;383:28;;;;;;;;447:4;424;:11;;:20;436:7;424:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;273:186;;:::o;538:189::-;637:1;618:21;;:7;:21;;;;610:30;;;;;;;;659:18;663:4;669:7;659:3;:18::i;:::-;651:27;;;;;;;;714:5;691:4;:11;;:20;703:7;691:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;538:189;;:::o;342:1289:1:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\";\n//import \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"./NaraMalsamiTokenTrade.sol\";\n\n\ncontract NaraMalsamiToken is ERC20, ERC20Detailed, WhitelistedRole, Ownable{\n    uint8 public constant DECIMALS = 18;\n    uint256 public constant INITIAL_SUPPLY = 10000000000 * (10 ** uint256(DECIMALS));\n    uint16 public constant fee = 1000; // 10000 = 100%\n\n    address public server;\n\n    event tradeMade(address maker, address tradeAddress);\n\n    constructor() public ERC20Detailed(\"NaraMalsamiToken\", \"NMT\", DECIMALS)\n    {\n        _mint(msg.sender, INITIAL_SUPPLY);\n        addWhitelisted(msg.sender);\n    }\n\n    function setServer(address _server) public onlyWhitelisted {\n        server = _server;\n    }\n\n    function getServer() public view returns(address){return server;}\n\n    function getDecimals() public pure returns (uint8){\n        return DECIMALS;\n    }\n\n    function newTrade(uint256 cap, uint256 dataNum, uint256 verifierNum) public returns(bool){\n        require(balanceOf(msg.sender) >= cap);\n        uint256 feeValue = cap.mul(fee).div(10000);\n        uint256 leftValue = cap - feeValue;\n\n        NaraMalsamiTokenTrade NMTT = new NaraMalsamiTokenTrade(this, msg.sender, leftValue, dataNum, verifierNum);\n        transfer(server, feeValue);\n        transfer(address(NMTT), leftValue);\n\n\n        emit tradeMade(msg.sender, address(NMTT));\n        return true;\n    }\n\n\n}",
  "sourcePath": "C:\\GitHub\\NMT-Solidity\\contracts\\NaraMalsamiToken.sol",
  "ast": {
    "absolutePath": "/C/GitHub/NMT-Solidity/contracts/NaraMalsamiToken.sol",
    "exportedSymbols": {
      "NaraMalsamiToken": [
        214
      ]
    },
    "id": 215,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1997,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 2055,
        "src": "89:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1328,
        "src": "161:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/GitHub/NMT-Solidity/contracts/NaraMalsamiTokenTrade.sol",
        "file": "./NaraMalsamiTokenTrade.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1022,
        "src": "302:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1996,
              "src": "371:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1996",
                "typeString": "contract ERC20"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "371:5:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2054,
              "src": "378:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2054",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "378:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1327,
              "src": "393:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$1327",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "393:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1564,
              "src": "410:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1564",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "410:7:1"
          }
        ],
        "contractDependencies": [
          1564,
          1021,
          1327,
          1218,
          1996,
          2123,
          2054
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 214,
        "linearizedBaseContracts": [
          214,
          1564,
          1327,
          1218,
          2054,
          1996,
          2123
        ],
        "name": "NaraMalsamiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 73,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "423:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 71,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "423:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "456:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 83,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "464:80:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 82,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130303030303030303030",
                "id": 75,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "505:11:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000000_by_1",
                  "typeString": "int_const 10000000000"
                },
                "value": "10000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "520:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "534:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "526:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 81,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "519:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "505:39:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 86,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "550:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 84,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "550:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 85,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "579:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 88,
            "name": "server",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "606:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 94,
            "name": "tradeMade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "maker",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "650:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "name": "tradeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "665:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "649:37:1"
            },
            "src": "634:53:1"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "769:86:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "785:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "785:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "797:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "779:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "779:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "837:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "837:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 108,
                      "name": "addWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "822:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "822:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4e6172614d616c73616d69546f6b656e",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:18:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d25bfbe8a0a82aff0c6dbbc8f8a9288cda0d524fd73cb6d797e5054ad5f7f1c7",
                      "typeString": "literal_string \"NaraMalsamiToken\""
                    },
                    "value": "NaraMalsamiToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4d54",
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "748:5:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_52e12996e41feec1466279df220dcebf623ead2389b6877f683db0b5380cfd12",
                      "typeString": "literal_string \"NMT\""
                    },
                    "value": "NMT"
                  },
                  {
                    "argumentTypes": null,
                    "id": 99,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "755:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 100,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 96,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2054,
                  "src": "714:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2054_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "714:50:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:1"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:1"
            },
            "scope": 214,
            "src": "693:162:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "920:33:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "server",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "930:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_server",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "930:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "930:16:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "onlyWhitelisted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1248,
                  "src": "904:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "904:15:1"
              }
            ],
            "name": "setServer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_server",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "880:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:17:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "920:0:1"
            },
            "scope": 214,
            "src": "861:92:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1008:16:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "name": "server",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "1016:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "1009:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getServer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1000:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:9:1"
            },
            "scope": 214,
            "src": "959:65:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1080:32:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1097:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "1090:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDecimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:1"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1074:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:7:1"
            },
            "scope": 214,
            "src": "1030:82:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "1207:420:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 155,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2282,
                                "src": "1235:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1235:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 154,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "1225:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1225:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "1250:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1225:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2285,
                        2286
                      ],
                      "referencedDeclaration": 2285,
                      "src": "1217:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:37:1"
                },
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "name": "feeValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1264:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1264:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1300:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1291:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 164,
                            "name": "cap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "1283:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1362,
                          "src": "1283:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1386,
                      "src": "1283:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1264:42:1"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "leftValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1316:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1336:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "feeValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1342:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1336:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:34:1"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "NMTT",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1361:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                        "typeString": "contract NaraMalsamiTokenTrade"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 178,
                        "name": "NaraMalsamiTokenTrade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1021,
                        "src": "1361:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                          "typeString": "contract NaraMalsamiTokenTrade"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2317,
                        "src": "1416:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiToken_$214",
                          "typeString": "contract NaraMalsamiToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "1422:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1422:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "leftValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1434:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "dataNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1445:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "verifierNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1454:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NaraMalsamiToken_$214",
                          "typeString": "contract NaraMalsamiToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1390:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_NaraMalsamiToken_$214_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NaraMalsamiTokenTrade_$1021_$",
                        "typeString": "function (contract NaraMalsamiToken,address,uint256,uint256,uint256) returns (contract NaraMalsamiTokenTrade)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 180,
                        "name": "NaraMalsamiTokenTrade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1021,
                        "src": "1394:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                          "typeString": "contract NaraMalsamiTokenTrade"
                        }
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                      "typeString": "contract NaraMalsamiTokenTrade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1361:105:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "server",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1485:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "feeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1493:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "1476:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "NMTT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1529:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1521:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "leftValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1536:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "1512:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "1573:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1573:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "NMTT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1593:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          ],
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1585:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 202,
                      "name": "tradeMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1563:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "EmitStatement",
                  "src": "1558:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1616:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 152,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "1609:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1136:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "name": "dataNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1149:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "name": "verifierNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1166:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1135:51:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1202:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1201:6:1"
            },
            "scope": 214,
            "src": "1118:509:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 215,
        "src": "342:1289:1"
      }
    ],
    "src": "0:1631:1"
  },
  "legacyAST": {
    "absolutePath": "/C/GitHub/NMT-Solidity/contracts/NaraMalsamiToken.sol",
    "exportedSymbols": {
      "NaraMalsamiToken": [
        214
      ]
    },
    "id": 215,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1997,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 2055,
        "src": "89:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1328,
        "src": "161:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/GitHub/NMT-Solidity/contracts/NaraMalsamiTokenTrade.sol",
        "file": "./NaraMalsamiTokenTrade.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 215,
        "sourceUnit": 1022,
        "src": "302:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1996,
              "src": "371:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1996",
                "typeString": "contract ERC20"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "371:5:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2054,
              "src": "378:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2054",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "378:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "WhitelistedRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1327,
              "src": "393:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistedRole_$1327",
                "typeString": "contract WhitelistedRole"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "393:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 69,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1564,
              "src": "410:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1564",
                "typeString": "contract Ownable"
              }
            },
            "id": 70,
            "nodeType": "InheritanceSpecifier",
            "src": "410:7:1"
          }
        ],
        "contractDependencies": [
          1564,
          1021,
          1327,
          1218,
          1996,
          2123,
          2054
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 214,
        "linearizedBaseContracts": [
          214,
          1564,
          1327,
          1218,
          2054,
          1996,
          2123
        ],
        "name": "NaraMalsamiToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 73,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "423:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 71,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "423:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 72,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "456:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 83,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "464:80:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 82,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130303030303030303030",
                "id": 75,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "505:11:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000000_by_1",
                  "typeString": "int_const 10000000000"
                },
                "value": "10000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "520:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "534:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "526:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 81,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "519:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "505:39:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 86,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "550:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 84,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "550:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030",
              "id": 85,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "579:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 88,
            "name": "server",
            "nodeType": "VariableDeclaration",
            "scope": 214,
            "src": "606:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 87,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "606:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 94,
            "name": "tradeMade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "maker",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "650:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "indexed": false,
                  "name": "tradeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "665:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "649:37:1"
            },
            "src": "634:53:1"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "769:86:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "785:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "785:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "797:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 102,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1911,
                      "src": "779:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "779:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "837:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "837:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 108,
                      "name": "addWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "822:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "822:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4e6172614d616c73616d69546f6b656e",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "728:18:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d25bfbe8a0a82aff0c6dbbc8f8a9288cda0d524fd73cb6d797e5054ad5f7f1c7",
                      "typeString": "literal_string \"NaraMalsamiToken\""
                    },
                    "value": "NaraMalsamiToken"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4d54",
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "748:5:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_52e12996e41feec1466279df220dcebf623ead2389b6877f683db0b5380cfd12",
                      "typeString": "literal_string \"NMT\""
                    },
                    "value": "NMT"
                  },
                  {
                    "argumentTypes": null,
                    "id": 99,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "755:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 100,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 96,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2054,
                  "src": "714:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2054_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "714:50:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:1"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:1"
            },
            "scope": 214,
            "src": "693:162:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "920:33:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "server",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "930:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "_server",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "930:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "930:16:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "onlyWhitelisted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1248,
                  "src": "904:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "904:15:1"
              }
            ],
            "name": "setServer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_server",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "880:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "879:17:1"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "920:0:1"
            },
            "scope": 214,
            "src": "861:92:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1008:16:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 131,
                    "name": "server",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "1016:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "1009:13:1"
                }
              ]
            },
            "documentation": null,
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getServer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:2:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1000:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:9:1"
            },
            "scope": 214,
            "src": "959:65:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1080:32:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1097:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "1090:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDecimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:1"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1074:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:7:1"
            },
            "scope": 214,
            "src": "1030:82:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "1207:420:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 155,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2282,
                                "src": "1235:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1235:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 154,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1605,
                            "src": "1225:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1225:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144,
                          "src": "1250:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1225:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2285,
                        2286
                      ],
                      "referencedDeclaration": 2285,
                      "src": "1217:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1217:37:1"
                },
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "name": "feeValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1264:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1264:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1300:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "1291:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 164,
                            "name": "cap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "1283:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1362,
                          "src": "1283:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1283:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1386,
                      "src": "1283:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1264:42:1"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "leftValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1316:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1336:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "feeValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1342:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1336:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:34:1"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "NMTT",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1361:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                        "typeString": "contract NaraMalsamiTokenTrade"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 178,
                        "name": "NaraMalsamiTokenTrade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1021,
                        "src": "1361:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                          "typeString": "contract NaraMalsamiTokenTrade"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2317,
                        "src": "1416:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiToken_$214",
                          "typeString": "contract NaraMalsamiToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "1422:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1422:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "leftValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1434:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "dataNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1445:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "verifierNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1454:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NaraMalsamiToken_$214",
                          "typeString": "contract NaraMalsamiToken"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1390:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_NaraMalsamiToken_$214_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_NaraMalsamiTokenTrade_$1021_$",
                        "typeString": "function (contract NaraMalsamiToken,address,uint256,uint256,uint256) returns (contract NaraMalsamiTokenTrade)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 180,
                        "name": "NaraMalsamiTokenTrade",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1021,
                        "src": "1394:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                          "typeString": "contract NaraMalsamiTokenTrade"
                        }
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                      "typeString": "contract NaraMalsamiTokenTrade"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1361:105:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "server",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1485:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "feeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1493:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "1476:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 197,
                            "name": "NMTT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1529:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1521:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "leftValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1536:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 195,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "1512:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2282,
                          "src": "1573:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1573:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "NMTT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 179,
                            "src": "1593:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NaraMalsamiTokenTrade_$1021",
                              "typeString": "contract NaraMalsamiTokenTrade"
                            }
                          ],
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1585:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 202,
                      "name": "tradeMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1563:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1563:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "EmitStatement",
                  "src": "1558:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1616:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 152,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "1609:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newTrade",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1136:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "name": "dataNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1149:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "name": "verifierNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1166:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1135:51:1"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "1202:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1201:6:1"
            },
            "scope": 214,
            "src": "1118:509:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 215,
        "src": "342:1289:1"
      }
    ],
    "src": "0:1631:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedAdded",
          "type": "event",
          "signature": "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f"
        },
        "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedRemoved",
          "type": "event",
          "signature": "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6"
        },
        "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminAdded",
          "type": "event",
          "signature": "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299"
        },
        "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminRemoved",
          "type": "event",
          "signature": "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165"
        },
        "0x8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "maker",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tradeAddress",
              "type": "address"
            }
          ],
          "name": "tradeMade",
          "type": "event",
          "signature": "0x8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x3B7DB60F5AC212c5966c45F7C23620D48Da4EeEC",
      "transactionHash": "0xe1cf281e02be93cc2248340a57e1993f2678424dddab83b3f90b0577e16a71ea"
    },
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event",
          "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event",
          "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedAdded",
          "type": "event",
          "signature": "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f"
        },
        "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedRemoved",
          "type": "event",
          "signature": "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6"
        },
        "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminAdded",
          "type": "event",
          "signature": "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299"
        },
        "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminRemoved",
          "type": "event",
          "signature": "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x996cba682088db5542850938e9bc4c0628f01143c672740ba4df894eb73ad3ce": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "claim",
          "type": "event",
          "signature": "0x996cba682088db5542850938e9bc4c0628f01143c672740ba4df894eb73ad3ce"
        },
        "0x8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "maker",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "tradeAddress",
              "type": "address"
            }
          ],
          "name": "tradeMade",
          "type": "event",
          "signature": "0x8ae111c34d2c04a708c524ba9a2a918eb96bb88c771f7dd204858ee30651cddb"
        }
      },
      "links": {},
      "address": "0x8d135Cad0f1390A21E96C0838F5eDa9B5cA20505",
      "transactionHash": "0x21154736e044deb2a95739998f3e5fc7c6b754a7a8f030d1053b89cff5374716"
    }
  },
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-05-17T04:27:47.021Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "owner": "The address to query the balance of.\r"
        },
        "return": "An uint256 representing the amount owned by the passed address.\r"
      },
      "decimals()": {
        "return": "the number of decimals of the token.\r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r Emits an Approval event.\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract.\r"
      },
      "name()": {
        "return": "the name of the token.\r"
      },
      "owner()": {
        "return": "the address of the owner.\r"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.\r"
      },
      "symbol()": {
        "return": "the symbol of the token.\r"
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence\r"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address\r",
        "params": {
          "to": "The address to transfer to.\r",
          "value": "The amount to be transferred.\r"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.\r Note that while this function emits an Approval event, this is not required as per the specification,\r and other compliant implementations may not emit the event.\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
        "params": {
          "newOwner": "The address to transfer ownership to.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner.\r It will not be possible to call the functions with the `onlyOwner`\r modifier anymore.\r"
      }
    }
  }
}